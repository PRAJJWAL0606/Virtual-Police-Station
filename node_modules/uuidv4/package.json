{
  "_args": [
    [
      {
        "raw": "uuidv4",
        "scope": null,
        "escapedName": "uuidv4",
        "name": "uuidv4",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "F:\\Software Engineering Project\\Virtual_Police"
    ]
  ],
  "_from": "uuidv4",
  "_hasShrinkwrap": false,
  "_id": "uuidv4@6.2.5",
  "_location": "/uuidv4",
  "_nodeVersion": "12.19.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/uuidv4_6.2.5_1604439074024_0.19101379157045417"
  },
  "_npmUser": {
    "name": "thenativeweb-admin",
    "email": "hello@thenativeweb.io"
  },
  "_npmVersion": "6.14.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "uuidv4",
    "scope": null,
    "escapedName": "uuidv4",
    "name": "uuidv4",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/uuidv4/-/uuidv4-6.2.5.tgz",
  "_shasum": "e92f323dad04431e930892bb14863ebfc7a94b0e",
  "_shrinkwrap": null,
  "_spec": "uuidv4",
  "_where": "F:\\Software Engineering Project\\Virtual_Police",
  "bugs": {
    "url": "https://github.com/thenativeweb/uuidv4/issues"
  },
  "contributors": [
    {
      "name": "Golo Roden",
      "email": "golo.roden@thenativeweb.io"
    },
    {
      "name": "Matthias Wagler",
      "email": "matthias.wagler@thenativeweb.io"
    },
    {
      "name": "Jan-Hendrik GrundhÃ¶fer",
      "email": "jan-hendrik.grundhoefer@thenativeweb.io"
    },
    {
      "name": "Sven Eppler",
      "email": "sven.eppler@sodgeit.de"
    },
    {
      "name": "Hannes Leutloff",
      "email": "hannes.leutloff@thenativeweb.io"
    }
  ],
  "dependencies": {
    "@types/uuid": "8.3.0",
    "uuid": "8.3.1"
  },
  "description": "uuidv4 creates v4 UUIDs.",
  "devDependencies": {
    "assertthat": "5.2.1",
    "roboter": "11.5.1",
    "semantic-release-configuration": "1.0.23"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ZUFxKFP9EWmju6a1tdne/pP+R65QGfcZ3LK2ExHHdwKuznX0Sx9kwhFd3Ss543Ft107SCQLyXcvHS+lmFsM9Zw==",
    "shasum": "e92f323dad04431e930892bb14863ebfc7a94b0e",
    "tarball": "https://registry.npmjs.org/uuidv4/-/uuidv4-6.2.5.tgz",
    "fileCount": 10,
    "unpackedSize": 14657,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfocwiCRA9TVsSAnZWagAAILcQAJVI8FHlnJ9l4b/nWw87\nriY0hFnkMxYBC4aqA/ZMy+6xQ7px7yk8FVBvvoC8c3yHl+NRGlY2eUMjLYK4\nDikKN0K8fQg/QvxRMFDRJAKr2NxxOE07trWbRKbdlCOhfWZ8ddDde/Af2XCb\n885ZGF8l8PRvqUy2WAQ9+iXIwJ+xGBvVWOZbM+P9egD/qZ5xQ7vxGh5EWdao\niPlDXo1kM5trwomDIib2EgK/wt3kFUu2G73nBwqeIQT6A6Gt4fKss6PgZUGG\nYPBQ6lJ1vYrBbxXzSmhoq0fwvnDVFIHFQRePMIcTQ6vNjUnoiFC3S6j+oeYd\n3z9DQ+IrUzzvMxJz4LsnNmcCIxs5iQ4kf8aqYyaqYHD+hhCwPGN0YfcU6le8\nISRYSy7hnzffjMtrbQngSZckIuEXwH7mdeYu0Z+8hi0vqMWhRcELA1qMgwGS\neTm1MmzhhqHLYpUSLSIDbWvVaBqkgFRVELwD4b3HRtQcZITjN1OTztN+GL6X\nFJ3DhO4We4yJquNZMwkSfb7/LZVElfFRT6wWjj3XCnwma8lSSjsy+D+sEI7/\nPYq/bB7iCSwWlbXw2n2XkcYBtZxtDIIEvRpDqOTYn07O9t9viNVVCBQ/RhV7\nanacbSSn6wWhE1uTgonkKLzbaQV3qg3Fpg1AFFuYjLVFg5St5lNFgrP9z8a8\nfSOo\r\n=2JmD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "d59f1d3c6837af5042518a8a9853e27b181a3886",
  "homepage": "https://github.com/thenativeweb/uuidv4#readme",
  "keywords": [
    "guid",
    "uuid"
  ],
  "license": "MIT",
  "main": "build/lib/uuidv4.js",
  "maintainers": [
    {
      "name": "yeldir",
      "email": "hannes.leutloff@yeldirium.de"
    },
    {
      "name": "thenativeweb-admin",
      "email": "hello@thenativeweb.io"
    },
    {
      "name": "goloroden",
      "email": "golo.roden@thenativeweb.io"
    }
  ],
  "name": "uuidv4",
  "optionalDependencies": {},
  "readme": "# uuidv4\n\nuuidv4 creates v4 UUIDs.\n\n## Status\n\n| Category         | Status                                                                                              |\n| ---------------- | --------------------------------------------------------------------------------------------------- |\n| Version          | [![npm](https://img.shields.io/npm/v/uuidv4)](https://www.npmjs.com/package/uuidv4)                 |\n| Dependencies     | ![David](https://img.shields.io/david/thenativeweb/uuidv4)                                          |\n| Dev dependencies | ![David](https://img.shields.io/david/dev/thenativeweb/uuidv4)                                      |\n| Build            | ![GitHub Actions](https://github.com/thenativeweb/uuidv4/workflows/Release/badge.svg?branch=master) |\n| License          | ![GitHub](https://img.shields.io/github/license/thenativeweb/uuidv4)                                |\n\n## Please note\n\nThis module will be deprecated in the future in favour of module [uuid](https://www.npmjs.com/package/uuid). Most of the functionality of this module is already included in `uuid` since version `8.3.0`, so most of the functions of this module have already been marked as deprecated.\n\n## Installation\n\n```shell\n$ npm install uuidv4\n```\n\n## Quick start\n\nFirst you need to integrate uuidv4 into your project by using the `require` function:\n\n```javascript\nconst { uuid } = require('uuidv4');\n```\n\nIf you use TypeScript, use the following code instead:\n\n```typescript\nimport { uuid } from 'uuidv4';\n```\n\nThen you can create UUIDs. To do so simply call the `uuid` function:\n\n```javascript\nconsole.log(uuid());\n// => '11bf5b37-e0b8-42e0-8dcf-dc8c4aefc000'\n```\n\n### Verifying a UUID\n\nTo verify whether a given value is a UUID, use the `isUuid` function:\n\n```javascript\nimport { isUuid } from 'uuidv4';\n\nconsole.log(isUuid('75442486-0878-440c-9db1-a7006c25a39f'));\n// => true\n```\n\n_Please note that the `isUuid` function returns `true` for both, `v4` and `v5` UUIDs. In addition, `isUuid` returns `true` for `empty()`._\n\n#### Using a regular expression\n\nIf you want to perform the verification on your own using a regular expression, use the `regex` property, and access its `v4` or `v5` property, depending on what you need:\n\n```javascript\nimport { regex } from 'uuidv4';\n\nconsole.log(regex.v4);\nconsole.log(regex.v5);\n```\n\n_Please note that the regular expressions also consider `empty()` to be a valid UUID._\n\n#### Using a JSON schema\n\nIf you want to perform the verification on your own using a JSON schema, use the `jsonSchema` property, and access its `v4` or `v5` property, depending on what you need:\n\n```javascript\nimport { jsonSchema } from 'uuidv4';\n\nconsole.log(jsonSchema.v4);\nconsole.log(jsonSchema.v5);\n```\n\n_Please note that the JSON schemas also consider `empty()` to be a valid UUID._\n\n### Getting a UUID from a string\n\nFrom time to time you need an identifier that looks like a UUID, but is actually inferred from a string. For that, use the `fromString` function, which returns a UUID `v5`:\n\n```javascript\nimport { fromString } from 'uuidv4';\n\nconsole.log(fromString('the native web'));\n// => 'cdb63720-9628-5ef6-bbca-2e5ce6094f3c'\n```\n\nBy default, the `fromString` function uses a pre-configured namespace. If you want to use your own namespace, provide a UUID as second parameter:\n\n```javascript\nimport { fromString } from 'uuidv4';\n\nconsole.log(fromString('the native web', '004aadf4-8e1a-4450-905b-6039179f52da'));\n// => 'b1c4a89e-4905-5e3c-b57f-dc92627d011e'\n```\n\n### Getting the empty UUID\n\nIf you need a UUID that consists only of zeros, use the `empty` function:\n\n```javascript\nimport { empty } from 'uuidv4';\n\nconsole.log(empty());\n// => '00000000-0000-0000-0000-000000000000'\n```\n\n## Running quality assurance\n\nTo run quality assurance for this module use [roboter](https://www.npmjs.com/package/roboter):\n\n```shell\n$ npx roboter\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thenativeweb/uuidv4.git"
  },
  "types": "build/lib/uuidv4.d.ts",
  "version": "6.2.5"
}
